{"version":3,"sources":["helpers/SignalingChannel.ts","components/LinearProgressWithLabel/index.tsx","features/fileLoader/FileLoader.tsx","components/InputSlider/index.tsx","components/ControlInput/index.tsx","features/webrtc/Controls.tsx","features/webrtc/RTCPlayer.tsx","helpers/helpers.ts","features/webrtc/helpers.ts","features/snackbar/SnackBar.tsx","features/auth/Auth.tsx","app/App.tsx","features/led/ledSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx","features/snackbar/snackbarSlice.ts","features/webrtc/webrtcSlice.ts","features/fileLoader/fileLoaderSlice.ts","features/auth/authSlice.ts"],"names":["SignalingChannel","signaling","this","message","send","JSON","stringify","data","handler","onMessage","parse","addEventListener","unsubscribe","console","log","removeEventListener","error","LinearProgressWithLabel","props","value","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","useStyles","makeStyles","button","marginRight","progress","file","FileLoader","pcRef","dispatch","useDispatch","classes","peerConnectionOpen","useSelector","state","webrtc","fileLoader","shallowEqual","maxProgress","progressValue","useState","selectedFile","setSelectedFile","useEffect","dropbox","window","dragenter","e","stopPropagation","preventDefault","dragover","drop","dataTransfer","files","MAX","resetFileSelect","type","id","style","onChange","target","List","className","ListItem","ListItemAvatar","Avatar","AttachFile","ListItemText","primary","name","secondary","Date","lastModified","toLocaleString","title","size","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Delete","Button","component","current","sendFileChannel","createDataChannel","binaryType","setMaxProgress","fileReader","FileReader","offset","event","isPaused","readSlice","byteOffset","slice","readAsArrayBuffer","result","readyState","warn","buffer","byteLength","setProgressValue","close","setSnackbarSuccess","bufferedAmount","label","bufferedAmountLowThreshold","debug","onopen","setSnackbarError","endIcon","htmlFor","startIcon","CloudUpload","disabled","root","input","InputSlider","min","max","step","setValue","gutterBottom","Grid","container","spacing","item","xs","Slider","newValue","aria-labelledby","Input","margin","Number","onBlur","inputProps","defaultProps","memo","COMMAND","ControlInput","sm","children","FormControl","fullWidth","InputLabel","Select","native","commandRecords","READ","DISABLE","ENABLE","PWM","pinNumbers","pinNumbersPWM","Controls","dcRef","dataChannelOpen","commandType","setCommandType","pinNumber","setPinNumber","duty","setDuty","frequency","setFrequency","setDutyCb","useCallback","setFrequencyCb","isPWM","pins","onSend","combinedValues","command_type","pin_number","stringifiedValue","commandMessage","setSnackbarInfo","onChangeCommandType","parseInt","onChangePinNumber","commandChildren","useMemo","Object","entries","map","code","toString","pinChildren","pin","marginTop","configuration","iceServers","url","urls","credential","username","theme","flexGrow","padding","formControl","video","justifyContent","backgroundImage","process","backgroundSize","backgroundRepeat","minHeight","RTCPlayer","id_token","auth","remoteVideoRef","useRef","room","setRoom","queryParamKey","queryParamValue","roomQueryParam","URLSearchParams","URL","ws","WebSocket","onCloseWS","onOpenWS","getRemoteMedia","pc","RTCPeerConnection","ontrack","track","stream","streams","onunmute","setPeerConnectionOpen","dataChannelName","onOpen","setDataChannelOpen","onClose","setDataChannelClose","openDataChannel","srcObject","makingOffer","ignoreOffer","isSettingRemoteAnswerPending","onicecandidate","candidate","onnegotiationneeded","a","setLocalDescription","description","localDescription","oniceconnectionstatechange","iceConnectionState","restartIce","onmessage","readyForOffer","signalingState","setRemoteDescription","addIceCandidate","onErrorWS","setPeerConnectionClose","document","visibilityState","pictureInPictureElement","exitPictureInPicture","togglePictureInPicture","pictureInPictureEnabled","currentTarget","requestPictureInPicture","Array","from","length","_","idx","noRoom","roomIdx","ref","autoPlay","playsInline","SnackBar","snackbarDelay","snackbar","open","snackbarMessage","onCloseSnackbar","closeSnackbar","Snackbar","autoHideDuration","Alert","severity","API_KEYS","require","layout","marginLeft","breakpoints","up","paper","marginBottom","height","Auth","Paper","square","align","clientId","GOOGLE_AUTH","buttonText","onSuccess","response","getProfile","profileObj","tokenObj","onFailure","cookiePolicy","isSignedIn","App","imageUrl","email","isAuthenticated","CssBaseline","elevation","Toolbar","alt","src","onLogoutSuccess","clearProfile","m","ledSlice","createSlice","initialState","pin1","pin2","pin3","reducers","setLed","action","payload","actions","rootReducer","combineReducers","led","store","configureStore","reducer","default","ReactDOM","render","getElementById","snackbarSlice","reset","webrtcSlice","fileLoaderSlice","googleId","givenName","familyName","authSlice"],"mappings":"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","file":"static/js/main.b5953051.chunk.js","sourcesContent":["class SignalingChannel {\n    private signaling: WebSocket;\n\n    constructor(signaling: WebSocket) {\n      this.signaling = signaling;\n    }\n\n    send(message: object) {\n      this.signaling.send(JSON.stringify({ data: message }));\n    }\n\n    set onmessage(handler: Function) {\n      const onMessage = ({ data }: { data: string }) => {\n        handler(JSON.parse(data));\n      };\n\n      this.signaling.addEventListener('message', onMessage);\n\n      /* TODO refactor */\n      this.unsubscribe = () => {\n        console.log('unsubscribe from message');\n        this.signaling.removeEventListener('message', onMessage);\n      };\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    unsubscribe() {\n      console.error('Method unsubscribe is not implemented');\n    }\n}\n\nexport { SignalingChannel };\n","import React from 'react';\nimport { Box, LinearProgress, Typography } from '@material-ui/core';\n\ntype IProps = { value: number };\n\nconst LinearProgressWithLabel = (props: IProps) => {\n  const { value } = props;\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {`${Math.round(value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport { LinearProgressWithLabel };\n","import { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, CloudUpload as CloudUploadIcon, AttachFile as AttachFileIcon } from '@material-ui/icons';\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinearProgressWithLabel } from 'components/LinearProgressWithLabel';\nimport {\n  setMaxProgress,\n  setProgressValue,\n} from 'features/fileLoader/fileLoaderSlice';\nimport { RootState } from 'app/rootReducer';\nimport { setSnackbarSuccess, setSnackbarError } from 'features/snackbar/snackbarSlice';\n\nconst FILE_DATA_CHANNEL_BINARY_TYPE = 'arraybuffer';\nconst END_OF_FILE_MESSAGE = 'EOF';\nconst EMPTY_PROGRESS = 0;\nconst MIN = 0;\n\nconst normalize = (value: number, MAX: number) => ((value - MIN) * 100) / (MAX - MIN);\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    marginRight: '0.5rem',\n  },\n  progress: {\n    width: '100%',\n  },\n  file: {\n    display: 'flex',\n  },\n}));\n\ntype IProps = {\n  pcRef: React.MutableRefObject<RTCPeerConnection | null>\n};\n\nexport const FileLoader = ({ pcRef }: IProps) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const peerConnectionOpen = useSelector((state: RootState) => state.webrtc.peerConnectionOpen);\n\n  const {\n    maxProgress,\n    progressValue,\n  } = useSelector((state: RootState) => state.fileLoader, shallowEqual);\n\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n  useEffect(() => {\n    /* TODO - add drop it text on fullscreen */\n    /* TODO - allow adding file form clipboard */\n    const dropbox = window;\n\n    const dragenter = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const dragover = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const drop = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      const { dataTransfer } = e;\n\n      if (dataTransfer?.files) {\n        setSelectedFile(dataTransfer.files[0]);\n      }\n    };\n\n    dropbox.addEventListener('dragenter', dragenter);\n    dropbox.addEventListener('dragover', dragover);\n    dropbox.addEventListener('drop', drop);\n\n    return () => {\n      dropbox.removeEventListener('dragenter', dragenter);\n      dropbox.removeEventListener('dragover', dragover);\n      dropbox.removeEventListener('drop', drop);\n    };\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files as FileList;\n    setSelectedFile(files[0]);\n  };\n\n  const resetFileSelect = () => {\n    setSelectedFile(null);\n  };\n\n  const sendFile = () => {\n    if (!pcRef.current || !peerConnectionOpen) {\n      dispatch(setSnackbarError('Не установлено соединение со стендом'));\n      return;\n    }\n    if (!selectedFile) {\n      dispatch(setSnackbarError('Файл не выбран'));\n      return;\n    }\n    /*\n                          Label may not be longer than 65,535 bytes.\n                          https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel#parameters:~:text=channel.%20This%20string-,may%20not%20be%20longer%20than%2065%2C535%20bytes.\n                          Filename sizes may not exceed 255 bytes.\n                          https://www.ibm.com/support/knowledgecenter/SSEQVQ_8.1.10/client/c_cmd_filespecsyntax.html\n                      */\n    /* TODO improve selectedFile transferring https://github.com/webrtc/samples/blob/gh-pages/src/content/datachannel/filetransfer/js/main.js */\n    const sendFileChannel = pcRef.current.createDataChannel(selectedFile.name);\n    sendFileChannel.binaryType = FILE_DATA_CHANNEL_BINARY_TYPE;\n    dispatch(setMaxProgress(selectedFile.size));\n\n    /*\n                    Firefox cannot send a message larger than 16 Kbytes to Chrome\n                    https://viblast.com/blog/2015/2/5/webrtc-data-channel-message-size/#blog-body:~:text=Firefox%20cannot%20send%20a%20message%20larger%20than%2016%20Kbytes%20to%20Chrome\n                    Messages smaller than 16kiB can be sent without concern,\n                    as all major user agents handle them the same way.\n                    Beyond that, things get more complicated.\n                    https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_data_channels#understanding_message_size_limits\n\n                    Tests have shown that targeting a high water mark of 1 MiB\n                    and setting a low water mark of 256 KiB results in adequate throughput\n                    https://stackoverflow.com/questions/56327783/webrtc-datachannel-for-high-bandwidth-application\n                    https://github.com/w3c/webrtc-pc/issues/1979#issuecomment-486611845\n                    */\n    // 2 ** 18 === 262144;\n    // 2 ** 20 === 1048576;\n    /* Chunk size is selected to be compatible with Microsoft MixedReality-WebRTC C# library\n    https://github.com/microsoft/MixedReality-WebRTC/issues/695 */\n    const CHUNK_SIZE = 61440;\n    const LOW_WATER_MARK = 262144;\n    const HIGH_WATER_MARK = 1048576;\n\n    const fileReader = new FileReader();\n    let offset = 0;\n\n    fileReader.addEventListener('error', (error) => {\n      console.error('Error reading selectedFile: ', error);\n    });\n\n    fileReader.addEventListener('abort', (event) => {\n      console.log('File reading aborted: ', event);\n    });\n\n    let isPaused = false;\n\n    const readSlice = (byteOffset: number) => {\n      console.log('readSlice', byteOffset);\n      const slice = selectedFile.slice(offset, byteOffset + CHUNK_SIZE);\n      fileReader.readAsArrayBuffer(slice);\n    };\n    // TODO UPDATE PAGE TITLE ON FILE LOAD\n    fileReader.addEventListener('load', (e: ProgressEvent<FileReader>) => {\n      console.log('FileReader.onload', e);\n      if (!e.target?.result || sendFileChannel.readyState !== 'open') {\n        console.warn('sendFileChannel.readyState is not open:', sendFileChannel.readyState);\n        return;\n      }\n\n      if (isPaused) {\n        console.warn('Unable to write, data channel is paused!');\n        return;\n      }\n\n      const buffer = e.target.result as ArrayBuffer;\n      sendFileChannel.send(buffer);\n\n      offset += buffer.byteLength;\n      dispatch(setProgressValue(offset));\n\n      if (offset >= selectedFile.size) {\n        sendFileChannel.send(END_OF_FILE_MESSAGE);\n        sendFileChannel.close();\n        setSelectedFile(null);\n        /* Reset progress */\n        dispatch(setMaxProgress(EMPTY_PROGRESS));\n        dispatch(setProgressValue(EMPTY_PROGRESS));\n        resetFileSelect();\n        dispatch(setSnackbarSuccess('Файл отправлен'));\n        return;\n      }\n\n      if (isPaused || sendFileChannel.bufferedAmount < HIGH_WATER_MARK) {\n        readSlice(offset);\n      } else {\n        // Pause once high water mark has been reached\n        console.log(`Data channel ${sendFileChannel.label} paused @ ${sendFileChannel.bufferedAmount}`);\n        isPaused = true;\n      }\n      // Otherwise wait for bufferedamountlow event to trigger reading more data\n    });\n\n    sendFileChannel.bufferedAmountLowThreshold = LOW_WATER_MARK;\n    sendFileChannel.addEventListener('bufferedamountlow', () => {\n      if (isPaused) {\n        console.debug(`Data channel ${sendFileChannel.label} resumed @ ${sendFileChannel.bufferedAmount}`);\n        isPaused = false;\n        readSlice(offset);\n      }\n    });\n\n    sendFileChannel.onopen = () => {\n      const FIRST_BYTE_SLICE_NUMBER = 0;\n      readSlice(FIRST_BYTE_SLICE_NUMBER);\n    };\n  };\n\n  return (\n    <section>\n      <input type=\"file\" id=\"files\" style={{ display: 'none' }} onChange={onChange} />\n      {selectedFile && (\n        <List className={classes.file}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <AttachFileIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={selectedFile.name}\n              secondary={new Date(selectedFile.lastModified).toLocaleString()}\n              title={`${selectedFile.size} байт`}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={resetFileSelect}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      )}\n      {progressValue > EMPTY_PROGRESS\n            && selectedFile\n        ? (\n          <div className={classes.progress}>\n            <LinearProgressWithLabel value={normalize(progressValue, maxProgress)} />\n          </div>\n        ) : <br />}\n      {selectedFile && (\n        <Button\n          component=\"button\"\n          color=\"primary\"\n          onClick={sendFile}\n          variant=\"contained\"\n          type=\"submit\"\n          size=\"small\"\n          className={classes.button}\n          endIcon={<SendIcon />}\n        >\n          Отправить\n        </Button>\n      )}\n      <Button\n        component=\"label\"\n        htmlFor=\"files\"\n        variant=\"contained\"\n        size=\"small\"\n        id=\"files\"\n        startIcon={<CloudUploadIcon />}\n        disabled={!peerConnectionOpen}\n      >\n        Загрузить прошивку\n      </Button>\n    </section>\n  );\n};\n","import React, { memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 60,\n  },\n});\n\ntype IProps = {\n    label?: string,\n    min?: number,\n    max?: number,\n    step?: number,\n    value: number,\n    setValue: (value: number) => void,\n    disabled?: boolean,\n}\n\nfunction InputSlider({\n  label,\n  min,\n  max,\n  step,\n  value,\n  setValue,\n  disabled,\n}: IProps) {\n  const classes = useStyles();\n\n  const handleSliderChange = (event: any, newValue: number | number[]) => {\n    setValue(newValue as number);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < min!) {\n      setValue(min!);\n    } else if (value > max!) {\n      setValue(max!);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography id=\"input-slider\" gutterBottom>\n          {label}\n        </Typography>\n      )}\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <Slider\n            value={value}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            max={max}\n            min={min}\n            step={step}\n            disabled={disabled}\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step,\n              min,\n              max,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n            disabled={disabled}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nInputSlider.defaultProps = {\n  label: '',\n  min: 0,\n  max: 100,\n  step: 1,\n  disabled: false,\n};\n\n// @ts-ignore\n// eslint-disable-next-line no-func-assign\nInputSlider = memo(InputSlider);\n\nexport { InputSlider };\n","import React, { memo } from 'react';\nimport {\n  FormControl, Grid, GridSize, InputLabel, Select,\n} from '@material-ui/core';\n\ntype IProps = {\n    value: number | string,\n    onChange: (e: React.ChangeEvent<{ value: unknown; }>) => void,\n    label: string,\n    xs: GridSize,\n    sm: GridSize,\n    id: string,\n    children: React.ReactNode,\n}\n\nexport const ControlInput = memo(({\n  value,\n  onChange,\n  label,\n  xs,\n  sm,\n  id,\n  children,\n}: IProps) => (\n  <Grid item xs={xs} sm={sm}>\n    <FormControl variant=\"standard\" fullWidth>\n      <InputLabel htmlFor={id}>{label}</InputLabel>\n      <Select\n        native\n        value={value}\n        onChange={onChange}\n        label={label}\n        inputProps={{\n          name: label,\n          id,\n        }}\n      >\n        {children}\n      </Select>\n    </FormControl>\n  </Grid>\n));\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSnackbarInfo } from 'features/snackbar/snackbarSlice';\nimport { RootState } from 'app/rootReducer';\nimport { InputSlider } from 'components/InputSlider';\nimport { ControlInput } from 'components/ControlInput';\nimport { Extends } from 'helpers/types';\n\n/*\n1 - считать уровень сигнала на пине,\n2 - задать низкий уровень сигнала на пине,\n3 - задать высокий уровень сигнала\n4 - генерировать ШИМ сигнал\n*/\nenum COMMAND {\n  READ = 1,\n  DISABLE = 2,\n  ENABLE = 3,\n  PWM = 4\n}\n\nconst commandRecords: Record<COMMAND, string> = {\n  [COMMAND.READ]: 'Считать уровень сигнала',\n  [COMMAND.DISABLE]: 'Задать низкий уровень сигнала',\n  [COMMAND.ENABLE]: 'Задать высокий уровень сигнала',\n  [COMMAND.PWM]: 'Генерировать ШИМ сигнал',\n};\n\ntype pinNumberType = typeof pinNumbers[number];\ntype pinNumberPWMType = Extends<pinNumberType, 3 | 5 | 9 | 10 | 11>\n\nconst pinNumbers = [2, 3, 4, 5, 8, 9, 10, 11] as const;\nconst pinNumbersPWM: pinNumberPWMType[] = [3, 5, 9, 10, 11];\n\n/*\nduty: 0 - 255\nfrequency: 2000 - 20000\n*/\ntype commands = {\n  command_type: COMMAND,\n  pin_number: pinNumberType,\n  duty: number,\n  frequency: number\n}\n\ntype IProps = {\n  dcRef: React.MutableRefObject<RTCDataChannel | null>,\n};\n\nexport const Controls = ({ dcRef }: IProps) => {\n  const dispatch = useDispatch();\n  const dataChannelOpen = useSelector((state: RootState) => state.webrtc.dataChannelOpen);\n\n  const [commandType, setCommandType] = useState<COMMAND>(COMMAND.ENABLE);\n  const [pinNumber, setPinNumber] = useState<pinNumberType>(2);\n  const [duty, setDuty] = useState<number>(255);\n  const [frequency, setFrequency] = useState<number>(2000);\n  const setDutyCb = useCallback(setDuty, []);\n  const setFrequencyCb = useCallback(setFrequency, []);\n\n  const isPWM = commandType === COMMAND.PWM;\n  const pins = isPWM ? pinNumbersPWM : pinNumbers;\n\n  const onSend = useCallback(() => {\n    const combinedValues: commands = {\n      command_type: commandType,\n      pin_number: pinNumber,\n      duty,\n      frequency,\n    };\n    const stringifiedValue = JSON.stringify(combinedValues, null, 4);\n\n    if (dcRef.current && dataChannelOpen) {\n      console.log('Send command:', stringifiedValue);\n      dcRef.current.send(stringifiedValue);\n\n      const commandMessage = isPWM\n        ? `${commandRecords[commandType]} с частотой ${frequency} и скважность ${duty} на пине ${pinNumber}`\n        : `${commandRecords[commandType]} на пине ${pinNumber}`;\n      dispatch(setSnackbarInfo(`Команда \"${commandMessage}\" отправлена`));\n    } else {\n      console.error('dcRef.current, dataChannelOpen:', dcRef.current, dataChannelOpen);\n    }\n  }, [commandType, pinNumber, duty, frequency, dataChannelOpen, dcRef.current, isPWM]);\n\n  const onChangeCommandType = useCallback((e: React.ChangeEvent<{ value: unknown }>) => {\n    const { value } = e.target;\n    if (typeof value !== 'string') {\n      console.error('commandType is not a string: ', value);\n      return;\n    }\n\n    setCommandType(parseInt(value, 10));\n  }, []);\n\n  const onChangePinNumber = useCallback((e: React.ChangeEvent<{ value: unknown; }>) => {\n    const { value } = e.target;\n    if (typeof value !== 'string') {\n      console.error('commandType is not a string: ', value);\n      return;\n    }\n\n    setPinNumber(parseInt(value, 10) as pinNumberType);\n  }, []);\n\n  const commandChildren = useMemo(() => Object.entries(commandRecords).map(([code, label]) => (\n    <option key={code} value={code} disabled={code === COMMAND.READ.toString()}>\n      {label}\n    </option>\n  )), [commandRecords]);\n\n  const pinChildren = useMemo(() => pins.map((pin: number) => (\n    <option key={pin} value={pin}>\n      {`Пин ${pin}`}\n    </option>\n  )), [pins]);\n\n  return (\n    <section style={{ marginTop: '2rem' }}>\n      {dataChannelOpen && (\n        <Grid container spacing={3}>\n          <ControlInput\n            xs={6}\n            sm={4}\n            value={commandType}\n            onChange={onChangeCommandType}\n            label=\"Команда\"\n            id=\"commandType\"\n          >\n            {commandChildren}\n          </ControlInput>\n          <ControlInput\n            xs={6}\n            sm={2}\n            value={pinNumber}\n            onChange={onChangePinNumber}\n            label={`Номер пина${isPWM ? ' (ШИМ)' : ''}`}\n            id=\"pinNumber\"\n          >\n            {pinChildren}\n          </ControlInput>\n          {isPWM && (\n          <>\n            <Grid item>\n              <InputSlider min={0} max={255} value={duty} setValue={setDutyCb} label=\"Скважность\" disabled={!isPWM} />\n            </Grid>\n            <Grid item>\n              <InputSlider\n                min={2000}\n                max={20000}\n                step={1000}\n                value={frequency}\n                setValue={setFrequencyCb}\n                label=\"Частота\"\n                disabled={!isPWM}\n              />\n            </Grid>\n          </>\n          )}\n        </Grid>\n      )}\n      <Grid container spacing={2} alignItems=\"flex-start\">\n        <Grid item>\n          <Button\n            component=\"button\"\n            color=\"primary\"\n            onClick={onSend}\n            variant=\"text\"\n            type=\"submit\"\n            size=\"medium\"\n            disabled={!dataChannelOpen}\n            endIcon={<SendIcon />}\n          >\n            Отправить команду\n          </Button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { SignalingChannel } from 'helpers/SignalingChannel';\nimport { generateQueryParam } from 'helpers/helpers';\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSnackbarError, setSnackbarSuccess } from 'features/snackbar/snackbarSlice';\nimport { FileLoader } from 'features/fileLoader/FileLoader';\nimport {\n  setPeerConnectionClose,\n  setPeerConnectionOpen,\n  setDataChannelClose,\n} from 'features/webrtc/webrtcSlice';\nimport { Controls } from 'features/webrtc/Controls';\nimport { openDataChannel } from 'features/webrtc/helpers';\nimport { RootState } from 'app/rootReducer';\n// @ts-ignore\nimport { RTCIceServer, MyRTCConfiguration } from 'webrtcTypes.d.ts';\n\nconst QUERY_PARAM_ROOM_NAME = 'room';\n\nconst configuration: MyRTCConfiguration = {\n  iceServers: [\n    { url: 'stun:stun.l.google.com:19302' },\n    { url: 'stun:stun1.l.google.com:19302' },\n    { url: 'stun:stun2.l.google.com:19302' },\n    { url: 'stun:stun3.l.google.com:19302' },\n    {\n      urls: 'turn:numb.viagenie.ca',\n      credential: '9u7prU:2}R{Sut~.)d[bP7,;Pgc\\'Pa',\n      username: 'fkrveacbukypqsqyaq@miucce.com',\n    },\n  ] as RTCIceServer[],\n};\n\nconst NO_ROOM = '';\nconst polite = true;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    padding: '2rem',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '10rem',\n  },\n  video: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundImage: `url(${process.env.PUBLIC_URL}/chip.png)`,\n    backgroundSize: '5.5rem',\n    backgroundRepeat: 'space',\n    width: '100%',\n    minHeight: '30rem',\n  },\n}));\n\nconst RTCPlayer = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const id_token = useSelector((state: RootState) => state.auth.id_token);\n\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-446425911\n  const remoteVideoRef = useRef<HTMLVideoElement | null>(null);\n  const pcRef = useRef<RTCPeerConnection | null>(null);\n  const dcRef = useRef<RTCDataChannel | null>(null);\n\n  const [room, setRoom] = useState<string>(NO_ROOM);\n\n  useEffect(() => {\n    if (room === NO_ROOM) {\n      return;\n    }\n\n    const roomQueryParam = generateQueryParam(QUERY_PARAM_ROOM_NAME, room);\n    const baseURL = 'wss://wss-signaling.herokuapp.com';\n    const url = new URL(`${roomQueryParam && `?${roomQueryParam}`}`, baseURL).toString();\n    const ws = new WebSocket(url, ['id_token', id_token]);\n\n    let signaling: SignalingChannel;\n    const onCloseWS = (e: CloseEvent) => {\n      console.log('CLOSE WS', e);\n    };\n    const onOpenWS = (e: Event) => {\n      console.log('OPEN WS', e);\n      signaling = new SignalingChannel(ws);\n      signaling.send({ getRemoteMedia: true });\n\n      const pc = new RTCPeerConnection(configuration);\n      pcRef.current = pc;\n\n      pc.ontrack = ({ track, streams: [stream] }) => {\n        // once media for a remote track arrives, show it in the remote video element\n        // eslint-disable-next-line no-param-reassign\n        track.onunmute = () => {\n          dispatch(setPeerConnectionOpen());\n          dispatch(setSnackbarSuccess('Соединение установлено'));\n\n          if (!dcRef.current) {\n            console.log('opening data channel');\n            openDataChannel({\n              dcRef,\n              pcRef,\n              peerConnectionOpen: true,\n              dataChannelOpen: false,\n              dispatch,\n            });\n          } else {\n            console.warn('data chanel is already opened');\n          }\n\n          // don't set srcObject again if it is already set.\n          if (remoteVideoRef.current!.srcObject) {\n            return;\n          }\n          remoteVideoRef.current!.srcObject = stream;\n        };\n      };\n\n      // - The perfect negotiation logic, separated from the rest of the application ---\n\n      // keep track of some negotiation state to prevent races and errors\n      let makingOffer = false;\n      let ignoreOffer = false;\n      let isSettingRemoteAnswerPending = false;\n\n      // send all ice candidates to the other peer\n      pc.onicecandidate = ({ candidate }) => {\n        signaling.send({ candidate });\n      };\n\n      // let the \"negotiationneeded\" event trigger offer generation\n      pc.onnegotiationneeded = async () => {\n        try {\n          makingOffer = true;\n          // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription#parameters\n          // TODO fix on @types/webrtc update\n          // @ts-ignore\n          await pc.setLocalDescription();\n          signaling.send({ description: pc.localDescription });\n        } catch (err) {\n          console.error(err);\n        } finally {\n          makingOffer = false;\n        }\n      };\n\n      pc.oniceconnectionstatechange = () => {\n        if (pc.iceConnectionState === 'failed') {\n          pc.restartIce();\n        }\n      };\n\n      signaling.onmessage = async ({ data, data: { description, candidate } }: ({\n        data: {\n          description: {\n            type: RTCSessionDescription['type']\n          },\n          candidate: RTCIceCandidate,\n        }\n      })) => {\n        // TODO add logger\n        console.log(data);\n\n        try {\n          if (description) {\n            // An offer may come in while we are busy processing SRD(answer).\n            // In this case, we will be in \"stable\" by the time the offer is processed\n            // so it is safe to chain it on our Operations Chain now.\n            const readyForOffer = !makingOffer\n                && (pc.signalingState === 'stable' || isSettingRemoteAnswerPending);\n            const offerCollision = description.type === 'offer' && !readyForOffer;\n\n            ignoreOffer = !polite && offerCollision;\n            if (ignoreOffer) {\n              return;\n            }\n            isSettingRemoteAnswerPending = description.type === 'answer';\n            await pc.setRemoteDescription(description); // SRD rolls back as needed\n            isSettingRemoteAnswerPending = false;\n            if (description.type === 'offer') {\n              // TODO fix on @types/webrtc update\n              // @ts-ignore\n              await pc.setLocalDescription();\n              signaling.send({ description: pc.localDescription });\n            }\n          } else if (candidate) {\n            try {\n              await pc.addIceCandidate(candidate);\n            } catch (err) {\n              if (!ignoreOffer) {\n                throw err;\n              } // Suppress ignored offer's candidates\n            }\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      };\n    };\n    const onErrorWS = (e: Event) => {\n      console.error('ERROR WS', e);\n      dispatch(setSnackbarError(`Не удалось присоединиться к стенду ${room}`));\n    };\n\n    ws.addEventListener('open', onOpenWS);\n    ws.addEventListener('close', onCloseWS);\n    ws.addEventListener('error', onErrorWS);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      ws.close(1000, 'change room');\n      if (dcRef.current) {\n        dcRef.current.close();\n        dcRef.current = null;\n        dispatch(setDataChannelClose());\n      }\n      if (pcRef.current) {\n        pcRef.current.close();\n        pcRef.current = null;\n        dispatch(setPeerConnectionClose());\n      }\n      ws.removeEventListener('open', onOpenWS);\n      ws.removeEventListener('close', onCloseWS);\n      ws.removeEventListener('error', onErrorWS);\n      if (signaling) {\n        signaling.unsubscribe();\n      }\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = null;\n      }\n    };\n  }, [room]);\n\n  useEffect(() => {\n    const handler = async () => {\n      if (document.visibilityState === 'visible' && document.pictureInPictureElement) {\n        await document.exitPictureInPicture();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handler);\n    return () => {\n      document.removeEventListener('visibilitychange', handler);\n    };\n  }, []);\n\n  const onChangeRoom = (e: React.ChangeEvent<{ value: unknown; }>) => {\n    const { value } = e.target;\n    if (typeof value !== 'string') {\n      console.error('Room is not a string: ', value);\n      return;\n    }\n\n    setRoom(value);\n  };\n\n  const togglePictureInPicture = async (e: React.MouseEvent<HTMLVideoElement>) => {\n    if (!remoteVideoRef.current?.srcObject) {\n      return;\n    }\n\n    if (document.pictureInPictureElement) {\n      await document.exitPictureInPicture();\n    } else if (document.pictureInPictureEnabled) {\n      await e.currentTarget.requestPictureInPicture();\n    }\n  };\n\n  const id = 'outlined-room-native-simple';\n  // TODO manage rooms from signaling server\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"standard\" className={classes.formControl}>\n        <InputLabel htmlFor={id}>Стенд</InputLabel>\n        <Select\n          native\n          value={room}\n          onChange={onChangeRoom}\n          label=\"Стенд\"\n          inputProps={{\n            name: 'Стенд',\n            id,\n          }}\n        >\n          {Array.from(({ length: 5 }), (_, idx) => idx)\n            .map((idx) => {\n              const noRoom = idx === 0;\n              const roomIdx = noRoom ? NO_ROOM : idx.toString();\n\n              return (\n                <option\n                  key={roomIdx}\n                  value={roomIdx}\n                  disabled={noRoom}\n                  aria-label={noRoom ? 'None' : roomIdx}\n                >\n                  {roomIdx}\n                </option>\n              );\n            })}\n        </Select>\n      </FormControl>\n      <section className={classes.video}>\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        <video\n          ref={remoteVideoRef}\n          autoPlay\n          playsInline\n          onClick={togglePictureInPicture}\n        />\n      </section>\n      <FileLoader pcRef={pcRef} />\n      <Controls dcRef={dcRef} />\n    </div>\n  );\n};\n\nexport default RTCPlayer;\n","export const generateQueryParam = (\n  queryParamKey: string, queryParamValue: string,\n) => new URLSearchParams({ [queryParamKey]: queryParamValue }).toString();\n","import React, { Dispatch } from 'react';\nimport { setSnackbarError } from '../snackbar/snackbarSlice';\nimport { setDataChannelClose, setDataChannelOpen } from './webrtcSlice';\n\nconst MESSAGES_CHANNEL_NAME = 'sendDataChannel';\n\ntype OpenDCProps = {\n    /* eslint no-param-reassign: [\"error\", { \"ignorePropertyModificationsFor\": [\"dcRef\"] }] */\n    dcRef: React.MutableRefObject<RTCDataChannel | null>,\n    pcRef: React.MutableRefObject<RTCPeerConnection | null>\n    dataChannelOpen: boolean,\n    peerConnectionOpen: boolean,\n    dispatch: Dispatch<any>,\n    dataChannelName?: string\n}\n\nexport const openDataChannel = ({\n  dcRef,\n  pcRef,\n  peerConnectionOpen,\n  dataChannelOpen,\n  dispatch,\n  dataChannelName = MESSAGES_CHANNEL_NAME,\n}: OpenDCProps) => {\n  if (!peerConnectionOpen) {\n    dispatch(setSnackbarError('Не установлено соединение со стендом'));\n    return;\n  }\n\n  if (!pcRef.current) {\n    console.error('RTCPeerConnection ref:', pcRef.current);\n    return;\n  }\n\n  if (!dataChannelOpen) {\n    dcRef.current = pcRef.current.createDataChannel(dataChannelName);\n    const onOpen = () => {\n      dispatch(setDataChannelOpen());\n    };\n\n    const onClose = () => {\n      dispatch(setDataChannelClose());\n    };\n\n    dcRef.current.addEventListener('open', onOpen);\n    dcRef.current.addEventListener('close', onClose);\n\n    const clean = () => {\n      dcRef?.current?.removeEventListener('open', onOpen);\n      dcRef?.current?.removeEventListener('close', onClose);\n    };\n\n    // eslint-disable-next-line consistent-return\n    return clean;\n  }\n};\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { Snackbar } from '@material-ui/core';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { closeSnackbar } from 'features/snackbar/snackbarSlice';\nimport { RootState } from 'app/rootReducer';\n\nconst SNACKBAR_DELAY = 6000;\n\ntype IProps = {\n    snackbarDelay?: number\n};\n\nexport const SnackBar = ({ snackbarDelay }: IProps) => {\n  const dispatch = useDispatch();\n\n  const {\n    open,\n    snackbarMessage,\n    type,\n  } = useSelector((state: RootState) => state.snackbar, shallowEqual);\n\n  const onCloseSnackbar = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      key={snackbarMessage}\n      open={open}\n      autoHideDuration={snackbarDelay}\n      onClose={onCloseSnackbar}\n      onClick={onCloseSnackbar}\n    >\n      <Alert severity={type}>\n        {snackbarMessage}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nSnackBar.defaultProps = {\n  snackbarDelay: SNACKBAR_DELAY,\n};\n","import React from 'react';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { getProfile } from 'features/auth/authSlice';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst API_KEYS = require('../../API_KEYS.json');\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(350 + theme.spacing(2) * 2)]: {\n      width: 350,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    height: 190,\n    [theme.breakpoints.up(350 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nconst Auth = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onSuccess = (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n    if (response.code) {\n      console.warn(response);\n      return;\n    }\n\n    dispatch(getProfile({\n      ...(response as GoogleLoginResponse).profileObj,\n      id_token: (response as GoogleLoginResponse).tokenObj.id_token,\n    }));\n  };\n\n  const onFailure = (error: any) => {\n    console.error(error);\n  };\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper} variant=\"outlined\" square>\n        <Typography component=\"h5\" variant=\"h5\" align=\"center\">\n          Авторизация\n        </Typography>\n        <div className={classes.button}>\n          <GoogleLogin\n            clientId={API_KEYS.GOOGLE_AUTH}\n            buttonText=\"Войти\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n            isSignedIn\n          />\n        </div>\n      </Paper>\n    </main>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport RTCPlayer from 'features/webrtc/RTCPlayer';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Paper,\n  Avatar,\n  ListItemText,\n  Toolbar,\n} from '@material-ui/core';\nimport { GoogleLogout } from 'react-google-login';\nimport { SnackBar } from 'features/snackbar/SnackBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,no-unused-vars\nimport adapter from 'webrtc-adapter';\nimport Auth from 'features/auth/Auth';\nimport { clearProfile } from 'features/auth/authSlice';\nimport { RootState } from 'app/rootReducer';\n\nconst API_KEYS = require('../API_KEYS.json');\n\ndeclare global {\n  export interface Document {\n    pictureInPictureElement: Element\n    exitPictureInPicture: () => Promise<void>\n    pictureInPictureEnabled: boolean\n  }\n  export interface HTMLVideoElement {\n    requestPictureInPicture: () => Promise<object>;\n  }\n}\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const {\n    imageUrl,\n    email,\n    name,\n  } = useSelector((state: RootState) => state.auth, shallowEqual);\n\n  const isAuthenticated = !!name;\n\n  const onLogoutSuccess = () => {\n    dispatch(clearProfile());\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <SnackBar />\n      {isAuthenticated ? (\n        <>\n          <Paper elevation={1} variant=\"outlined\" square>\n            <Toolbar>\n              <Box mr={1}>\n                <Avatar alt={name} src={imageUrl} />\n              </Box>\n              <ListItemText\n                primary={name}\n                secondary={email}\n              />\n              <GoogleLogout\n                clientId={API_KEYS.GOOGLE_AUTH}\n                buttonText=\"Выйти\"\n                onLogoutSuccess={onLogoutSuccess}\n              />\n            </Toolbar>\n          </Paper>\n          <Box m={2}>\n            <Paper elevation={3} variant=\"outlined\">\n              <RTCPlayer />\n              {/* FIXME <LedIndicator /> */}\n            </Paper>\n          </Box>\n        </>\n      )\n        : <Auth />}\n    </>\n  );\n};\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype Led = {\n  pin1: boolean,\n  pin2: boolean,\n  pin3: boolean,\n}\n\nconst initialState = {\n  pin1: false,\n  pin2: false,\n  pin3: false,\n};\n\nconst ledSlice = createSlice({\n  name: 'led',\n  initialState,\n  reducers: {\n    setLed(state, action: PayloadAction<Led>) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setLed } = ledSlice.actions;\n\nexport default ledSlice.reducer;\n","import auth from 'features/auth/authSlice';\nimport fileLoader from 'features/fileLoader/fileLoaderSlice';\nimport led from 'features/led/ledSlice';\nimport snackbar from 'features/snackbar/snackbarSlice';\nimport webrtc from 'features/webrtc/webrtcSlice';\nimport { combineReducers } from '@reduxjs/toolkit';\n\nconst rootReducer = combineReducers({\n  auth,\n  fileLoader,\n  led,\n  snackbar,\n  webrtc,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { Action, configureStore } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'app/store';\n\nimport 'index.css';\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n}\n\nrender();\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./app/App', render);\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Color } from '@material-ui/lab/Alert/Alert';\n\nconst initialState = {\n  snackbarMessage: '',\n  type: 'info' as Color,\n  open: false,\n};\n\nconst snackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n    setSnackbarSuccess(state, action: PayloadAction<string>) {\n      state.snackbarMessage = action.payload;\n      state.type = 'success';\n      state.open = true;\n      return state;\n    },\n    setSnackbarInfo(state, action: PayloadAction<string>) {\n      state.snackbarMessage = action.payload;\n      state.type = 'info';\n      state.open = true;\n      return state;\n    },\n    setSnackbarError(state, action: PayloadAction<string>) {\n      state.snackbarMessage = action.payload;\n      state.type = 'error';\n      state.open = true;\n      return state;\n    },\n    closeSnackbar(state) {\n      // State of snackbar is not reset on snackbar close in order to perform close animation\n      state.open = false;\n      return state;\n    },\n  },\n});\n\nexport const {\n  reset,\n  setSnackbarSuccess,\n  setSnackbarInfo,\n  setSnackbarError,\n  closeSnackbar,\n} = snackbarSlice.actions;\n\nexport default snackbarSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  peerConnectionOpen: false,\n  dataChannelOpen: false,\n};\n\nconst webrtcSlice = createSlice({\n  name: 'webrtc',\n  initialState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n    setPeerConnectionClose(state) {\n      state.peerConnectionOpen = false;\n      return state;\n    },\n    setPeerConnectionOpen(state) {\n      state.peerConnectionOpen = true;\n      return state;\n    },\n    setDataChannelOpen(state) {\n      state.dataChannelOpen = true;\n      return state;\n    },\n    setDataChannelClose(state) {\n      state.dataChannelOpen = false;\n      return state;\n    },\n  },\n});\n\nexport const {\n  reset,\n  setPeerConnectionClose,\n  setPeerConnectionOpen,\n  setDataChannelOpen,\n  setDataChannelClose,\n} = webrtcSlice.actions;\n\nexport default webrtcSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst EMPTY_PROGRESS = 0;\n\nconst initialState = {\n  maxProgress: EMPTY_PROGRESS,\n  progressValue: EMPTY_PROGRESS,\n};\n\nconst fileLoaderSlice = createSlice({\n  name: 'fileLoader',\n  initialState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n    setMaxProgress(state, action: PayloadAction<number>) {\n      state.maxProgress = action.payload;\n      return state;\n    },\n    setProgressValue(state, action: PayloadAction<number>) {\n      state.progressValue = action.payload;\n      return state;\n    },\n  },\n});\n\nexport const {\n  reset,\n  setMaxProgress,\n  setProgressValue,\n} = fileLoaderSlice.actions;\n\nexport default fileLoaderSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { GoogleLoginResponse } from 'react-google-login';\n\ntype AuthState = GoogleLoginResponse['profileObj'] & { id_token: string }\n\nconst initialState: AuthState = {\n  googleId: '',\n  imageUrl: '',\n  email: '',\n  name: '',\n  givenName: '',\n  familyName: '',\n  id_token: '',\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    getProfile(state, action: PayloadAction<AuthState>) {\n      return action.payload;\n    },\n    clearProfile() {\n      return initialState;\n    },\n  },\n});\n\nexport const { getProfile, clearProfile } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"sourceRoot":""}