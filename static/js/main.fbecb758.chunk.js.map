{"version":3,"sources":["helpers/SignalingChannel.ts","components/LinearProgressWithLabel/index.tsx","features/fileLoader/FileLoader.tsx","features/webrtc/RTCPlayer.tsx","helpers/helpers.ts","features/snackbar/SnackBar.tsx","features/auth/Auth.tsx","app/App.tsx","features/led/ledSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx","features/snackbar/snackbarSlice.ts","features/webrtc/webrtcSlice.ts","features/fileLoader/fileLoaderSlice.ts","features/auth/authSlice.ts"],"names":["SignalingChannel","signaling","this","message","send","JSON","stringify","data","handler","onMessage","parse","addEventListener","unsubscribe","console","log","removeEventListener","error","LinearProgressWithLabel","props","value","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","useStyles","makeStyles","button","marginRight","progress","file","FileLoader","pcRef","dispatch","useDispatch","classes","peerConnectionOpen","useSelector","state","webrtc","fileLoader","shallowEqual","maxProgress","progressValue","useState","selectedFile","setSelectedFile","useEffect","dropbox","window","dragenter","e","stopPropagation","preventDefault","dragover","drop","dataTransfer","files","MAX","resetFileSelect","type","id","style","onChange","target","List","className","ListItem","ListItemAvatar","Avatar","AttachFile","ListItemText","primary","name","secondary","Date","lastModified","toLocaleString","title","size","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Delete","Button","component","current","sendFileChannel","createDataChannel","binaryType","setMaxProgress","fileReader","FileReader","offset","event","isPaused","readSlice","byteOffset","slice","readAsArrayBuffer","result","readyState","warn","buffer","byteLength","setProgressValue","close","setSnackbarSuccess","bufferedAmount","label","bufferedAmountLowThreshold","debug","onopen","setSnackbarError","endIcon","htmlFor","startIcon","CloudUpload","disabled","configuration","iceServers","url","urls","credential","username","theme","root","flexGrow","margin","spacing","padding","formControl","video","justifyContent","flexDirection","backgroundImage","process","backgroundSize","backgroundRepeat","minHeight","RTCPlayer","id_token","auth","dataChannelOpen","remoteVideoRef","useRef","dcRef","inputValue","setInputValue","room","setRoom","queryParamKey","queryParamValue","roomQueryParam","URLSearchParams","toString","URL","ws","WebSocket","onCloseWS","onOpenWS","getRemoteMedia","pc","RTCPeerConnection","ontrack","track","stream","streams","onunmute","setPeerConnectionOpen","srcObject","makingOffer","ignoreOffer","isSettingRemoteAnswerPending","onicecandidate","candidate","onnegotiationneeded","a","setLocalDescription","description","localDescription","oniceconnectionstatechange","iceConnectionState","restartIce","onmessage","readyForOffer","signalingState","setRemoteDescription","addIceCandidate","onErrorWS","setDataChannelClose","setPeerConnectionClose","document","visibilityState","pictureInPictureElement","exitPictureInPicture","togglePictureInPicture","pictureInPictureEnabled","currentTarget","requestPictureInPicture","FormControl","InputLabel","Select","native","inputProps","Array","from","length","_","idx","map","noRoom","roomIdx","ref","autoPlay","playsInline","Grid","container","item","TextField","multiline","dataChannel","setDataChannelOpen","onclose","trim","SnackBar","snackbarDelay","snackbar","open","snackbarMessage","onCloseSnackbar","closeSnackbar","Snackbar","autoHideDuration","onClose","Alert","severity","defaultProps","API_KEYS","require","layout","marginLeft","breakpoints","up","paper","marginTop","marginBottom","height","Auth","Paper","square","align","clientId","GOOGLE_AUTH","buttonText","onSuccess","response","code","getProfile","profileObj","tokenObj","onFailure","cookiePolicy","isSignedIn","App","imageUrl","email","isAuthenticated","CssBaseline","elevation","Toolbar","alt","src","onLogoutSuccess","clearProfile","m","ledSlice","createSlice","initialState","pin1","pin2","pin3","reducers","setLed","action","payload","actions","rootReducer","combineReducers","led","store","configureStore","reducer","default","ReactDOM","render","getElementById","snackbarSlice","reset","webrtcSlice","fileLoaderSlice","googleId","givenName","familyName","authSlice"],"mappings":"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","file":"static/js/main.fbecb758.chunk.js","sourcesContent":["class SignalingChannel {\n    private signaling: WebSocket;\n\n    constructor(signaling: WebSocket) {\n      this.signaling = signaling;\n    }\n\n    send(message: object) {\n      this.signaling.send(JSON.stringify({ data: message }));\n    }\n\n    set onmessage(handler: Function) {\n      const onMessage = ({ data }: { data: string }) => {\n        handler(JSON.parse(data));\n      };\n\n      this.signaling.addEventListener('message', onMessage);\n\n      /* TODO refactor */\n      this.unsubscribe = () => {\n        console.log('unsubscribe from message');\n        this.signaling.removeEventListener('message', onMessage);\n      };\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    unsubscribe() {\n      console.error('Method unsubscribe is not implemented');\n    }\n}\n\nexport { SignalingChannel };\n","import React from 'react';\nimport { Box, LinearProgress, Typography } from '@material-ui/core';\n\ntype IProps = { value: number };\n\nconst LinearProgressWithLabel = (props: IProps) => {\n  const { value } = props;\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {`${Math.round(value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport { LinearProgressWithLabel };\n","import { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, CloudUpload as CloudUploadIcon, AttachFile as AttachFileIcon } from '@material-ui/icons';\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinearProgressWithLabel } from 'components/LinearProgressWithLabel';\nimport {\n  setMaxProgress,\n  setProgressValue,\n} from 'features/fileLoader/fileLoaderSlice';\nimport { RootState } from 'app/rootReducer';\nimport { setSnackbarSuccess, setSnackbarError } from 'features/snackbar/snackbarSlice';\n\nconst FILE_DATA_CHANNEL_BINARY_TYPE = 'arraybuffer';\nconst END_OF_FILE_MESSAGE = 'EOF';\nconst EMPTY_PROGRESS = 0;\nconst MIN = 0;\n\nconst normalize = (value: number, MAX: number) => ((value - MIN) * 100) / (MAX - MIN);\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    marginRight: '0.5rem',\n  },\n  progress: {\n    width: '100%',\n  },\n  file: {\n    display: 'flex',\n  },\n}));\n\ntype IProps = { pcRef: React.RefObject<RTCPeerConnection> };\n\nexport const FileLoader = ({ pcRef }: IProps) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const peerConnectionOpen = useSelector((state: RootState) => state.webrtc.peerConnectionOpen);\n\n  const {\n    maxProgress,\n    progressValue,\n  } = useSelector((state: RootState) => state.fileLoader, shallowEqual);\n\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n  useEffect(() => {\n    /* TODO - add drop it text on fullscreen */\n    /* TODO - allow adding file form clipboard */\n    const dropbox = window;\n\n    const dragenter = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const dragover = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    const drop = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      const { dataTransfer } = e;\n\n      if (dataTransfer?.files) {\n        setSelectedFile(dataTransfer.files[0]);\n      }\n    };\n\n    dropbox.addEventListener('dragenter', dragenter);\n    dropbox.addEventListener('dragover', dragover);\n    dropbox.addEventListener('drop', drop);\n\n    return () => {\n      dropbox.removeEventListener('dragenter', dragenter);\n      dropbox.removeEventListener('dragover', dragover);\n      dropbox.removeEventListener('drop', drop);\n    };\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files as FileList;\n    setSelectedFile(files[0]);\n  };\n\n  const resetFileSelect = () => {\n    setSelectedFile(null);\n  };\n\n  const sendFile = () => {\n    if (!pcRef.current || !peerConnectionOpen) {\n      dispatch(setSnackbarError('Не установлено соединение со стендом'));\n      return;\n    }\n    if (!selectedFile) {\n      dispatch(setSnackbarError('Файл не выбран'));\n      return;\n    }\n    /*\n                          Label may not be longer than 65,535 bytes.\n                          https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel#parameters:~:text=channel.%20This%20string-,may%20not%20be%20longer%20than%2065%2C535%20bytes.\n                          Filename sizes may not exceed 255 bytes.\n                          https://www.ibm.com/support/knowledgecenter/SSEQVQ_8.1.10/client/c_cmd_filespecsyntax.html\n                      */\n    /* TODO improve selectedFile transferring https://github.com/webrtc/samples/blob/gh-pages/src/content/datachannel/filetransfer/js/main.js */\n    const sendFileChannel = pcRef.current.createDataChannel(selectedFile.name);\n    sendFileChannel.binaryType = FILE_DATA_CHANNEL_BINARY_TYPE;\n    dispatch(setMaxProgress(selectedFile.size));\n\n    /*\n                    Firefox cannot send a message larger than 16 Kbytes to Chrome\n                    https://viblast.com/blog/2015/2/5/webrtc-data-channel-message-size/#blog-body:~:text=Firefox%20cannot%20send%20a%20message%20larger%20than%2016%20Kbytes%20to%20Chrome\n                    Messages smaller than 16kiB can be sent without concern,\n                    as all major user agents handle them the same way.\n                    Beyond that, things get more complicated.\n                    https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_data_channels#understanding_message_size_limits\n\n                    Tests have shown that targeting a high water mark of 1 MiB\n                    and setting a low water mark of 256 KiB results in adequate throughput\n                    https://stackoverflow.com/questions/56327783/webrtc-datachannel-for-high-bandwidth-application\n                    https://github.com/w3c/webrtc-pc/issues/1979#issuecomment-486611845\n                    */\n    // 2 ** 18 === 262144;\n    // 2 ** 20 === 1048576;\n    /* Chunk size is selected to be compatible with Microsoft MixedReality-WebRTC C# library\n    https://github.com/microsoft/MixedReality-WebRTC/issues/695 */\n    const CHUNK_SIZE = 61440;\n    const LOW_WATER_MARK = 262144;\n    const HIGH_WATER_MARK = 1048576;\n\n    const fileReader = new FileReader();\n    let offset = 0;\n\n    fileReader.addEventListener('error', (error) => {\n      console.error('Error reading selectedFile: ', error);\n    });\n\n    fileReader.addEventListener('abort', (event) => {\n      console.log('File reading aborted: ', event);\n    });\n\n    let isPaused = false;\n\n    const readSlice = (byteOffset: number) => {\n      console.log('readSlice', byteOffset);\n      const slice = selectedFile.slice(offset, byteOffset + CHUNK_SIZE);\n      fileReader.readAsArrayBuffer(slice);\n    };\n    // TODO UPDATE PAGE TITLE ON FILE LOAD\n    fileReader.addEventListener('load', (e: ProgressEvent<FileReader>) => {\n      console.log('FileReader.onload', e);\n      if (!e.target?.result || sendFileChannel.readyState !== 'open') {\n        console.warn('sendFileChannel.readyState is not open:', sendFileChannel.readyState);\n        return;\n      }\n\n      if (isPaused) {\n        console.warn('Unable to write, data channel is paused!');\n        return;\n      }\n\n      const buffer = e.target.result as ArrayBuffer;\n      sendFileChannel.send(buffer);\n\n      offset += buffer.byteLength;\n      dispatch(setProgressValue(offset));\n\n      if (offset >= selectedFile.size) {\n        sendFileChannel.send(END_OF_FILE_MESSAGE);\n        sendFileChannel.close();\n        setSelectedFile(null);\n        /* Reset progress */\n        dispatch(setMaxProgress(EMPTY_PROGRESS));\n        dispatch(setProgressValue(EMPTY_PROGRESS));\n        resetFileSelect();\n        dispatch(setSnackbarSuccess('Файл отправлен'));\n        return;\n      }\n\n      if (isPaused || sendFileChannel.bufferedAmount < HIGH_WATER_MARK) {\n        readSlice(offset);\n      } else {\n        // Pause once high water mark has been reached\n        console.log(`Data channel ${sendFileChannel.label} paused @ ${sendFileChannel.bufferedAmount}`);\n        isPaused = true;\n      }\n      // Otherwise wait for bufferedamountlow event to trigger reading more data\n    });\n\n    sendFileChannel.bufferedAmountLowThreshold = LOW_WATER_MARK;\n    sendFileChannel.addEventListener('bufferedamountlow', () => {\n      if (isPaused) {\n        console.debug(`Data channel ${sendFileChannel.label} resumed @ ${sendFileChannel.bufferedAmount}`);\n        isPaused = false;\n        readSlice(offset);\n      }\n    });\n\n    sendFileChannel.onopen = () => {\n      const FIRST_BYTE_SLICE_NUMBER = 0;\n      readSlice(FIRST_BYTE_SLICE_NUMBER);\n    };\n  };\n\n  return (\n    <section>\n      <input type=\"file\" id=\"files\" style={{ display: 'none' }} onChange={onChange} />\n      {selectedFile && (\n        <List className={classes.file}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <AttachFileIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={selectedFile.name}\n              secondary={new Date(selectedFile.lastModified).toLocaleString()}\n              title={`${selectedFile.size} байт`}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={resetFileSelect}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      )}\n      {progressValue > EMPTY_PROGRESS\n            && selectedFile\n        ? (\n          <div className={classes.progress}>\n            <LinearProgressWithLabel value={normalize(progressValue, maxProgress)} />\n          </div>\n        ) : <br />}\n      {selectedFile && (\n        <Button\n          component=\"button\"\n          color=\"primary\"\n          onClick={sendFile}\n          variant=\"contained\"\n          type=\"submit\"\n          size=\"small\"\n          className={classes.button}\n          endIcon={<SendIcon />}\n        >\n          Отправить\n        </Button>\n      )}\n      <Button\n        component=\"label\"\n        htmlFor=\"files\"\n        variant=\"contained\"\n        size=\"small\"\n        id=\"files\"\n        startIcon={<CloudUploadIcon />}\n        disabled={!peerConnectionOpen}\n      >\n        Загрузить прошивку\n      </Button>\n    </section>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { SignalingChannel } from 'helpers/SignalingChannel';\nimport { generateQueryParam } from 'helpers/helpers';\nimport {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSnackbarError, setSnackbarSuccess } from 'features/snackbar/snackbarSlice';\nimport { FileLoader } from 'features/fileLoader/FileLoader';\nimport {\n  setPeerConnectionClose,\n  setPeerConnectionOpen,\n  setDataChannelOpen,\n  setDataChannelClose,\n} from 'features/webrtc/webrtcSlice';\nimport { RootState } from 'app/rootReducer';\n// @ts-ignore\nimport { RTCIceServer, MyRTCConfiguration } from 'webrtcTypes.d.ts';\n\nconst QUERY_PARAM_ROOM_NAME = 'room';\n\nconst configuration: MyRTCConfiguration = {\n  iceServers: [\n    { url: 'stun:stun.l.google.com:19302' },\n    { url: 'stun:stun1.l.google.com:19302' },\n    { url: 'stun:stun2.l.google.com:19302' },\n    { url: 'stun:stun3.l.google.com:19302' },\n    {\n      urls: 'turn:numb.viagenie.ca',\n      credential: '9u7prU:2}R{Sut~.)d[bP7,;Pgc\\'Pa',\n      username: 'fkrveacbukypqsqyaq@miucce.com',\n    },\n  ] as RTCIceServer[],\n};\n\nconst NO_ROOM = '';\nconst polite = true;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    padding: '2rem',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '10rem',\n  },\n  video: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundImage: `url(${process.env.PUBLIC_URL}/chip.png)`,\n    backgroundSize: '5.5rem',\n    backgroundRepeat: 'space',\n    width: '100%',\n    minHeight: '30rem',\n  },\n}));\n\nconst MESSAGES_CHANNEL_NAME = 'sendDataChannel';\n\nconst RTCPlayer = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const id_token = useSelector((state: RootState) => state.auth.id_token);\n  const peerConnectionOpen = useSelector((state: RootState) => state.webrtc.peerConnectionOpen);\n  const dataChannelOpen = useSelector((state: RootState) => state.webrtc.dataChannelOpen);\n\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-446425911\n  const remoteVideoRef = useRef<HTMLVideoElement | null>(null);\n  const pcRef = useRef<RTCPeerConnection | null>(null);\n  const dcRef = useRef<RTCDataChannel | null>(null);\n\n  const [inputValue, setInputValue] = useState('');\n  const [room, setRoom] = useState<string>(NO_ROOM);\n\n  useEffect(() => {\n    if (room === NO_ROOM) {\n      return;\n    }\n\n    const roomQueryParam = generateQueryParam(QUERY_PARAM_ROOM_NAME, room);\n    const baseURL = 'wss://wss-signaling.herokuapp.com';\n    const url = new URL(`${roomQueryParam && `?${roomQueryParam}`}`, baseURL).toString();\n    const ws = new WebSocket(url, ['id_token', id_token]);\n\n    let signaling: SignalingChannel;\n    const onCloseWS = (e: CloseEvent) => {\n      console.log('CLOSE WS', e);\n    };\n    const onOpenWS = (e: Event) => {\n      console.log('OPEN WS', e);\n      signaling = new SignalingChannel(ws);\n      signaling.send({ getRemoteMedia: true });\n\n      const pc = new RTCPeerConnection(configuration);\n      pcRef.current = pc;\n\n      pc.ontrack = ({ track, streams: [stream] }) => {\n        // once media for a remote track arrives, show it in the remote video element\n        // eslint-disable-next-line no-param-reassign\n        track.onunmute = () => {\n          dispatch(setPeerConnectionOpen());\n          dispatch(setSnackbarSuccess('Соединение установлено'));\n          // don't set srcObject again if it is already set.\n          if (remoteVideoRef.current!.srcObject) {\n            return;\n          }\n          remoteVideoRef.current!.srcObject = stream;\n        };\n      };\n\n      // - The perfect negotiation logic, separated from the rest of the application ---\n\n      // keep track of some negotiation state to prevent races and errors\n      let makingOffer = false;\n      let ignoreOffer = false;\n      let isSettingRemoteAnswerPending = false;\n\n      // send all ice candidates to the other peer\n      pc.onicecandidate = ({ candidate }) => {\n        signaling.send({ candidate });\n      };\n\n      // let the \"negotiationneeded\" event trigger offer generation\n      pc.onnegotiationneeded = async () => {\n        try {\n          makingOffer = true;\n          // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription#parameters\n          // TODO fix on @types/webrtc update\n          // @ts-ignore\n          await pc.setLocalDescription();\n          signaling.send({ description: pc.localDescription });\n        } catch (err) {\n          console.error(err);\n        } finally {\n          makingOffer = false;\n        }\n      };\n\n      pc.oniceconnectionstatechange = () => {\n        if (pc.iceConnectionState === 'failed') {\n          pc.restartIce();\n        }\n      };\n\n      signaling.onmessage = async ({ data, data: { description, candidate } }: ({\n        data: {\n          description: {\n            type: RTCSessionDescription['type']\n          },\n          candidate: RTCIceCandidate,\n        }\n      })) => {\n        // TODO add logger\n        console.log(data);\n\n        try {\n          if (description) {\n            // An offer may come in while we are busy processing SRD(answer).\n            // In this case, we will be in \"stable\" by the time the offer is processed\n            // so it is safe to chain it on our Operations Chain now.\n            const readyForOffer = !makingOffer\n                && (pc.signalingState === 'stable' || isSettingRemoteAnswerPending);\n            const offerCollision = description.type === 'offer' && !readyForOffer;\n\n            ignoreOffer = !polite && offerCollision;\n            if (ignoreOffer) {\n              return;\n            }\n            isSettingRemoteAnswerPending = description.type === 'answer';\n            await pc.setRemoteDescription(description); // SRD rolls back as needed\n            isSettingRemoteAnswerPending = false;\n            if (description.type === 'offer') {\n              // TODO fix on @types/webrtc update\n              // @ts-ignore\n              await pc.setLocalDescription();\n              signaling.send({ description: pc.localDescription });\n            }\n          } else if (candidate) {\n            try {\n              await pc.addIceCandidate(candidate);\n            } catch (err) {\n              if (!ignoreOffer) {\n                throw err;\n              } // Suppress ignored offer's candidates\n            }\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      };\n    };\n    const onErrorWS = (e: Event) => {\n      console.error('ERROR WS', e);\n      dispatch(setSnackbarError(`Не удалось присоединиться к стенду ${room}`));\n    };\n\n    ws.addEventListener('open', onOpenWS);\n    ws.addEventListener('close', onCloseWS);\n    ws.addEventListener('error', onErrorWS);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      ws.close(1000, 'change room');\n      if (dcRef.current) {\n        dcRef.current.close();\n        dcRef.current = null;\n        dispatch(setDataChannelClose());\n      }\n      if (pcRef.current) {\n        pcRef.current.close();\n        pcRef.current = null;\n        dispatch(setPeerConnectionClose());\n      }\n      ws.removeEventListener('open', onOpenWS);\n      ws.removeEventListener('close', onCloseWS);\n      ws.removeEventListener('error', onErrorWS);\n      if (signaling) {\n        signaling.unsubscribe();\n      }\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = null;\n      }\n    };\n  }, [room]);\n\n  useEffect(() => {\n    const handler = async () => {\n      if (document.visibilityState === 'visible' && document.pictureInPictureElement) {\n        await document.exitPictureInPicture();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handler);\n    return () => {\n      document.removeEventListener('visibilitychange', handler);\n    };\n  }, []);\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!peerConnectionOpen) {\n      dispatch(setSnackbarError('Не установлено соединение со стендом'));\n      return;\n    }\n\n    if (!dataChannelOpen) {\n      dcRef.current = pcRef.current!.createDataChannel(MESSAGES_CHANNEL_NAME);\n      const dataChannel = dcRef.current;\n      dataChannel.onopen = () => {\n        dispatch(setDataChannelOpen());\n      };\n      dataChannel.onclose = () => {\n        dispatch(setDataChannelClose());\n      };\n    }\n\n    setInputValue(e.target.value);\n  };\n\n  const onSend = () => {\n    if (dcRef.current && dataChannelOpen) {\n      dcRef.current.send(inputValue);\n      dispatch(setSnackbarSuccess('Команда отправлена'));\n      setInputValue('');\n    }\n  };\n\n  const onChangeRoom = (e: React.ChangeEvent<{ value: unknown; }>) => {\n    const { value } = e.target;\n    if (typeof value !== 'string') {\n      console.error('Room is not a string: ', value);\n      return;\n    }\n\n    setRoom(value);\n  };\n\n  const togglePictureInPicture = async (e: React.MouseEvent<HTMLVideoElement>) => {\n    if (!remoteVideoRef.current?.srcObject) {\n      return;\n    }\n\n    if (document.pictureInPictureElement) {\n      await document.exitPictureInPicture();\n    } else if (document.pictureInPictureEnabled) {\n      await e.currentTarget.requestPictureInPicture();\n    }\n  };\n\n  // TODO manage rooms from signaling server\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"standard\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-room-native-simple\">Стенд</InputLabel>\n        <Select\n          native\n          value={room}\n          onChange={onChangeRoom}\n          label=\"Стенда\"\n          inputProps={{\n            name: 'Стенд',\n            id: 'outlined-room-native-simple',\n          }}\n        >\n          {Array.from(({ length: 5 }), (_, idx) => idx)\n            .map((idx) => {\n              const noRoom = idx === 0;\n              const roomIdx = noRoom ? NO_ROOM : idx.toString();\n\n              return (\n                <option\n                  key={roomIdx}\n                  value={roomIdx}\n                  disabled={noRoom}\n                  aria-label={noRoom ? 'None' : roomIdx}\n                >\n                  {roomIdx}\n                </option>\n              );\n            })}\n        </Select>\n      </FormControl>\n      <section className={classes.video}>\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        <video\n          ref={remoteVideoRef}\n          autoPlay\n          playsInline\n          onClick={togglePictureInPicture}\n        />\n      </section>\n      <FileLoader pcRef={pcRef} />\n      <section>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <TextField\n              label=\"Команда\"\n              multiline\n              value={inputValue}\n              onChange={onInputChange}\n              disabled={!peerConnectionOpen}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              component=\"button\"\n              color=\"primary\"\n              onClick={onSend}\n              variant=\"text\"\n              type=\"submit\"\n              size=\"small\"\n              disabled={!dataChannelOpen || !inputValue?.trim()}\n              endIcon={<SendIcon />}\n            >\n              Отправить\n            </Button>\n          </Grid>\n        </Grid>\n      </section>\n    </div>\n  );\n};\n\nexport default RTCPlayer;\n","export const generateQueryParam = (\n  queryParamKey: string, queryParamValue: string,\n) => new URLSearchParams({ [queryParamKey]: queryParamValue }).toString();\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { Snackbar } from '@material-ui/core';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { closeSnackbar } from 'features/snackbar/snackbarSlice';\nimport { RootState } from 'app/rootReducer';\n\nconst SNACKBAR_DELAY = 6000;\n\ntype IProps = {\n    snackbarDelay?: number\n};\n\nexport const SnackBar = ({ snackbarDelay }: IProps) => {\n  const dispatch = useDispatch();\n\n  const {\n    open,\n    snackbarMessage,\n    type,\n  } = useSelector((state: RootState) => state.snackbar, shallowEqual);\n\n  const onCloseSnackbar = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={snackbarDelay}\n      onClose={onCloseSnackbar}\n      onClick={onCloseSnackbar}\n    >\n      <Alert severity={type}>\n        {snackbarMessage}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nSnackBar.defaultProps = {\n  snackbarDelay: SNACKBAR_DELAY,\n};\n","import React from 'react';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { getProfile } from 'features/auth/authSlice';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst API_KEYS = require('../../API_KEYS.json');\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(350 + theme.spacing(2) * 2)]: {\n      width: 350,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    height: 190,\n    [theme.breakpoints.up(350 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nconst Auth = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onSuccess = (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n    if (response.code) {\n      console.warn(response);\n      return;\n    }\n\n    dispatch(getProfile({\n      ...(response as GoogleLoginResponse).profileObj,\n      id_token: (response as GoogleLoginResponse).tokenObj.id_token,\n    }));\n  };\n\n  const onFailure = (error: any) => {\n    console.error(error);\n  };\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper} variant=\"outlined\" square>\n        <Typography component=\"h5\" variant=\"h5\" align=\"center\">\n          Авторизация\n        </Typography>\n        <div className={classes.button}>\n          <GoogleLogin\n            clientId={API_KEYS.GOOGLE_AUTH}\n            buttonText=\"Войти\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n            isSignedIn\n          />\n        </div>\n      </Paper>\n    </main>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport RTCPlayer from 'features/webrtc/RTCPlayer';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Paper,\n  Avatar,\n  ListItemText,\n  Toolbar,\n} from '@material-ui/core';\nimport { GoogleLogout } from 'react-google-login';\nimport { SnackBar } from 'features/snackbar/SnackBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,no-unused-vars\nimport adapter from 'webrtc-adapter';\nimport Auth from 'features/auth/Auth';\nimport { clearProfile } from 'features/auth/authSlice';\nimport { RootState } from 'app/rootReducer';\n\nconst API_KEYS = require('../API_KEYS.json');\n\ndeclare global {\n  export interface Document {\n    pictureInPictureElement: Element\n    exitPictureInPicture: () => Promise<void>\n    pictureInPictureEnabled: boolean\n  }\n  export interface HTMLVideoElement {\n    requestPictureInPicture: () => Promise<object>;\n  }\n}\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const {\n    imageUrl,\n    email,\n    name,\n  } = useSelector((state: RootState) => state.auth, shallowEqual);\n\n  const isAuthenticated = !!name;\n\n  const onLogoutSuccess = () => {\n    dispatch(clearProfile());\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <SnackBar />\n      {isAuthenticated ? (\n        <>\n          <Paper elevation={1} variant=\"outlined\" square>\n            <Toolbar>\n              <Box mr={1}>\n                <Avatar alt={name} src={imageUrl} />\n              </Box>\n              <ListItemText\n                primary={name}\n                secondary={email}\n              />\n              <GoogleLogout\n                clientId={API_KEYS.GOOGLE_AUTH}\n                buttonText=\"Выйти\"\n                onLogoutSuccess={onLogoutSuccess}\n              />\n            </Toolbar>\n          </Paper>\n          <Box m={2}>\n            <Paper elevation={3} variant=\"outlined\">\n              <RTCPlayer />\n              {/* FIXME <LedIndicator /> */}\n            </Paper>\n          </Box>\n        </>\n      )\n        : <Auth />}\n    </>\n  );\n};\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype Led = {\n  pin1: boolean,\n  pin2: boolean,\n  pin3: boolean,\n}\n\nconst initialState = {\n  pin1: false,\n  pin2: false,\n  pin3: false,\n};\n\nconst ledSlice = createSlice({\n  name: 'led',\n  initialState,\n  reducers: {\n    setLed(state, action: PayloadAction<Led>) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setLed } = ledSlice.actions;\n\nexport default ledSlice.reducer;\n","import auth from 'features/auth/authSlice';\nimport fileLoader from 'features/fileLoader/fileLoaderSlice';\nimport led from 'features/led/ledSlice';\nimport snackbar from 'features/snackbar/snackbarSlice';\nimport webrtc from 'features/webrtc/webrtcSlice';\nimport { combineReducers } from '@reduxjs/toolkit';\n\nconst rootReducer = combineReducers({\n  auth,\n  fileLoader,\n  led,\n  snackbar,\n  webrtc,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { Action, configureStore } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'app/store';\n\nimport 'index.css';\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n}\n\nrender();\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./app/App', render);\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Color } from '@material-ui/lab/Alert/Alert';\n\nconst initialState = {\n  snackbarMessage: '',\n  type: 'info' as Color,\n  open: false,\n};\n\nconst snackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n    setSnackbarSuccess(state, action: PayloadAction<string>) {\n      state.snackbarMessage = action.payload;\n      state.type = 'success';\n      state.open = true;\n      return state;\n    },\n    setSnackbarError(state, action: PayloadAction<string>) {\n      state.snackbarMessage = action.payload;\n      state.type = 'error';\n      state.open = true;\n      return state;\n    },\n    closeSnackbar(state) {\n      // State of snackbar is not reset on snackbar close in order to perform close animation\n      state.open = false;\n      return state;\n    },\n  },\n});\n\nexport const {\n  reset,\n  setSnackbarSuccess,\n  setSnackbarError,\n  closeSnackbar,\n} = snackbarSlice.actions;\n\nexport default snackbarSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  peerConnectionOpen: false,\n  dataChannelOpen: false,\n};\n\nconst webrtcSlice = createSlice({\n  name: 'webrtc',\n  initialState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n    setPeerConnectionClose(state) {\n      state.peerConnectionOpen = false;\n      return state;\n    },\n    setPeerConnectionOpen(state) {\n      state.peerConnectionOpen = true;\n      return state;\n    },\n    setDataChannelOpen(state) {\n      state.dataChannelOpen = true;\n      return state;\n    },\n    setDataChannelClose(state) {\n      state.dataChannelOpen = false;\n      return state;\n    },\n  },\n});\n\nexport const {\n  reset,\n  setPeerConnectionClose,\n  setPeerConnectionOpen,\n  setDataChannelOpen,\n  setDataChannelClose,\n} = webrtcSlice.actions;\n\nexport default webrtcSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst EMPTY_PROGRESS = 0;\n\nconst initialState = {\n  maxProgress: EMPTY_PROGRESS,\n  progressValue: EMPTY_PROGRESS,\n};\n\nconst fileLoaderSlice = createSlice({\n  name: 'fileLoader',\n  initialState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n    setMaxProgress(state, action: PayloadAction<number>) {\n      state.maxProgress = action.payload;\n      return state;\n    },\n    setProgressValue(state, action: PayloadAction<number>) {\n      state.progressValue = action.payload;\n      return state;\n    },\n  },\n});\n\nexport const {\n  reset,\n  setMaxProgress,\n  setProgressValue,\n} = fileLoaderSlice.actions;\n\nexport default fileLoaderSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { GoogleLoginResponse } from 'react-google-login';\n\ntype AuthState = GoogleLoginResponse['profileObj'] & { id_token: string }\n\nconst initialState: AuthState = {\n  googleId: '',\n  imageUrl: '',\n  email: '',\n  name: '',\n  givenName: '',\n  familyName: '',\n  id_token: '',\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    getProfile(state, action: PayloadAction<AuthState>) {\n      return action.payload;\n    },\n    clearProfile() {\n      return initialState;\n    },\n  },\n});\n\nexport const { getProfile, clearProfile } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"sourceRoot":""}