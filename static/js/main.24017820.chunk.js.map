{"version":3,"sources":["features/auth/Auth.tsx","components/FileUploader.tsx","helpers/SignalingChannel.js","features/rtc/RTCPlayer.tsx","helpers/helpers.js","features/led/LedIndicator.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","features/auth/authSlice.ts","features/led/ledSlice.ts"],"names":["useStyles","makeStyles","root","flexGrow","Auth","dispatch","useDispatch","useSelector","state","auth","shallowEqual","imageUrl","email","name","classes","isAuthenticated","Toolbar","className","List","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","ListItemSecondaryAction","clientId","API_KEYS","GOOGLE_AUTH","buttonText","onLogoutSuccess","clearProfile","onSuccess","response","getProfile","profileObj","onFailure","e","console","error","cookiePolicy","isSignedIn","theme","maxWidth","margin","spacing","FileUploader","useState","file","setFile","open","setOpen","useEffect","dropbox","window","dragenter","stopPropagation","preventDefault","dragover","drop","files","dataTransfer","addEventListener","removeEventListener","resetFileSelect","ref","current","value","defaultValue","sendFile","a","formData","FormData","append","axios","method","url","data","headers","useRef","encType","type","id","accept","style","display","onChange","target","lastModifiedDate","toLocaleString","title","size","IconButton","edge","aria-label","onClick","Button","component","htmlFor","variant","color","Snackbar","autoHideDuration","onClose","Alert","severity","SignalingChannel","signaling","this","message","send","JSON","stringify","handler","onmessage","parse","configuration","iceServers","urls","credential","username","RTCPlayer","remoteVideoRef","dataChannelFileSenderRef","pcRef","maxProgress","setMaxProgress","progressValue","setProgressValue","queryParamKey","queryParamValue","roomQueryParam","URLSearchParams","toString","ws","WebSocket","pc","RTCPeerConnection","ontrack","track","stream","streams","onunmute","srcObject","makingOffer","ignoreOffer","isSettingRemoteAnswerPending","onicecandidate","candidate","onnegotiationneeded","setLocalDescription","description","localDescription","oniceconnectionstatechange","iceConnectionState","restartIce","log","readyForOffer","signalingState","setRemoteDescription","addIceCandidate","onSendChannelStateChange","readyState","channel","event","sendFileChannel","createDataChannel","binaryType","CHUNK_SIZE","fileReader","FileReader","offset","readSlice","byteOffset","slice","readAsArrayBuffer","result","loaded","onopen","click","max","autoPlay","playsInline","LedIndicator","led","onclose","onerror","setLed","close","onClickOn","onClickOff","Object","entries","map","idx","isOn","key","classNames","led__off","led__on","App","rootReducer","combineReducers","store","configureStore","reducer","require","default","ReactDOM","render","document","getElementById","initialState","authSlice","createSlice","reducers","action","payload","actions","ledSlice","pin1","pin2","pin3"],"mappings":"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","file":"static/js/main.24017820.chunk.js","sourcesContent":["import React from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { getProfile, clearProfile } from 'features/auth/authSlice';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Toolbar,\n} from '@material-ui/core';\nimport API_KEYS from 'API_KEYS.json';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const {\n    imageUrl,\n    email,\n    name,\n  } = useSelector((state: any) => state.auth, shallowEqual);\n  const classes = useStyles();\n\n  const isAuthenticated = !!name;\n\n  const onSuccess = (response: any) => {\n    dispatch(getProfile(response.profileObj));\n  };\n\n  const onFailure = (e: any) => {\n    console.error(e);\n  };\n\n  const onLogoutSuccess = () => {\n    dispatch(clearProfile());\n  };\n\n  return (\n    <Toolbar>\n      <div className={classes.root}>\n        <List>\n          <ListItem>\n            {name && (\n            <ListItemAvatar>\n              <Avatar>\n                <Avatar alt={name} src={imageUrl} />\n              </Avatar>\n            </ListItemAvatar>\n            )}\n            <ListItemText\n              primary={name}\n              secondary={email}\n            />\n            <ListItemSecondaryAction>\n              {isAuthenticated ? (\n                <GoogleLogout\n                  clientId={API_KEYS.GOOGLE_AUTH}\n                  buttonText=\"Выйти\"\n                  onLogoutSuccess={onLogoutSuccess}\n                />\n              ) : (\n                <GoogleLogin\n                  clientId={API_KEYS.GOOGLE_AUTH}\n                  buttonText=\"Войти\"\n                  onSuccess={onSuccess}\n                  onFailure={onFailure}\n                  cookiePolicy=\"single_host_origin\"\n                  isSignedIn\n                />\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </div>\n    </Toolbar>\n  );\n};\n\nexport default Auth;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Button, Snackbar, ListItemText, Avatar,\n  List, ListItem, ListItemAvatar, ListItemSecondaryAction, IconButton,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert } from '@material-ui/lab';\nimport FolderIcon from '@material-ui/icons/AddToPhotos';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: '20rem',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst FileUploader = () => {\n  const classes = useStyles();\n  const [file, setFile] = useState();\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    /* TODO - add drop it text on fullscreen */\n    const dropbox = window;\n\n    dropbox.addEventListener('dragenter', dragenter, false);\n    dropbox.addEventListener('dragover', dragover, false);\n    dropbox.addEventListener('drop', drop, false);\n\n    function dragenter(e: any) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    function dragover(e: any) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    function drop(e: any) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      const dt = e.dataTransfer;\n      const { files } = dt;\n\n      setFile(files[0]);\n    }\n\n    return () => {\n      dropbox.removeEventListener('dragenter', dragenter, false);\n      dropbox.removeEventListener('dragover', dragover, false);\n      dropbox.removeEventListener('drop', drop, false);\n    };\n  }, []);\n\n  const handleFileSelect = (e: any) => {\n    setFile(e.target.files[0]);\n  };\n\n  const resetFileSelect = () => {\n    setFile(null);\n\n    if (ref.current) {\n      ref.current.value = ref.current.defaultValue;\n    }\n  };\n\n  const sendFile = async (e: any) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    await axios({\n      method: 'post',\n      url: 'http://localhost:8080/upload-image',\n      data: formData,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n\n    setOpen(true);\n\n    resetFileSelect();\n  };\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className={classes.root}>\n      <form method=\"post\" encType=\"multipart/form-data\">\n        <input\n          ref={ref}\n          type=\"file\"\n          id=\"files\"\n          accept=\".jpg\"\n          style={{ display: 'none' }}\n          onChange={handleFileSelect}\n        />\n        {file && (\n          <List>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={file.name} secondary={file.lastModifiedDate.toLocaleString()} title={`${file.size} байт`} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={resetFileSelect}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        )}\n        <Button\n          component=\"label\"\n          htmlFor=\"files\"\n          variant=\"contained\"\n          size=\"small\"\n        >\n          Загрузить\n        </Button>\n        {file && (\n          <>\n            <Button\n              component=\"button\"\n              color=\"primary\"\n              onClick={sendFile}\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"small\"\n            >\n              Отправить\n            </Button>\n          </>\n        )}\n        <Snackbar open={open} autoHideDuration={6000} onClose={() => setOpen(false)}>\n          <Alert severity=\"success\">\n            Файл успешно отправлен\n          </Alert>\n        </Snackbar>\n      </form>\n    </div>\n  );\n};\n\nexport default FileUploader;\n","class SignalingChannel {\n  constructor(signaling) {\n    this.signaling = signaling;\n  }\n\n  send(message) {\n    this.signaling.send(JSON.stringify({ data: message }));\n  }\n\n  set onmessage(handler) {\n    this.signaling.onmessage = ({ data }) => {\n      handler(JSON.parse(data));\n    };\n  }\n}\n\nexport { SignalingChannel };\n","// @ts-nocheck\nimport React, { useEffect, useRef, useState } from 'react';\nimport { SignalingChannel } from 'helpers/SignalingChannel';\nimport { generateQueryParam } from 'helpers/helpers';\nimport 'features/rtc/RTCPlayer.css';\n\nconst QUERY_PARAM_ROOM_NAME = 'room';\nconst FILE_DATA_CHANNEL_BINARY_TYPE = 'arraybuffer';\nconst END_OF_FILE_MESSAGE = 'EOF';\n\nconst configuration = {\n  iceServers: [\n    { url: 'stun:stun.l.google.com:19302' },\n    { url: 'stun:stun1.l.google.com:19302' },\n    { url: 'stun:stun2.l.google.com:19302' },\n    { url: 'stun:stun3.l.google.com:19302' },\n    {\n      urls: 'turn:numb.viagenie.ca',\n      credential: '9u7prU:2}R{Sut~.)d[bP7,;Pgc\\'Pa',\n      username: 'fkrveacbukypqsqyaq@miucce.com',\n    },\n  ],\n};\n\nconst EMPTY_PROGRESS = 0;\nconst polite = true;\n\nconst RTCPlayer = () => {\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\n  const dataChannelFileSenderRef = useRef<HTMLInputElement>(null);\n  const pcRef = useRef(null);\n\n  const [maxProgress, setMaxProgress] = useState(EMPTY_PROGRESS);\n  const [progressValue, setProgressValue] = useState(EMPTY_PROGRESS);\n\n  useEffect(() => {\n    const room = 1;\n    const roomQueryParam = generateQueryParam(QUERY_PARAM_ROOM_NAME, room);\n    const ws = new WebSocket(`wss://wss-signaling.herokuapp.com/${roomQueryParam && `?${roomQueryParam}`}`);\n\n    const signaling = new SignalingChannel(ws);\n\n    const pc = new RTCPeerConnection(configuration);\n    pcRef.current = pc;\n\n    pc.ontrack = ({ track, streams: [stream] }) => {\n      // once media for a remote track arrives, show it in the remote video element\n      // eslint-disable-next-line no-param-reassign\n      track.onunmute = () => {\n        // don't set srcObject again if it is already set.\n        if (remoteVideoRef.current.srcObject) {\n          return;\n        }\n        remoteVideoRef.current.srcObject = stream;\n      };\n    };\n\n    // - The perfect negotiation logic, separated from the rest of the application ---\n\n    // keep track of some negotiation state to prevent races and errors\n    let makingOffer = false;\n    let ignoreOffer = false;\n    let isSettingRemoteAnswerPending = false;\n\n    // send any ice candidates to the other peer\n    pc.onicecandidate = ({ candidate }) => {\n      signaling.send({ candidate });\n    };\n\n    // let the \"negotiationneeded\" event trigger offer generation\n    pc.onnegotiationneeded = async () => {\n      try {\n        makingOffer = true;\n        await pc.setLocalDescription();\n        signaling.send({ description: pc.localDescription });\n      } catch (err) {\n        console.error(err);\n      } finally {\n        makingOffer = false;\n      }\n    };\n\n    pc.oniceconnectionstatechange = () => {\n      if (pc.iceConnectionState === 'failed') {\n        pc.restartIce();\n      }\n    };\n\n    signaling.onmessage = async ({ data, data: { description, candidate } }) => {\n      console.log(data);\n\n      try {\n        if (description) {\n          // An offer may come in while we are busy processing SRD(answer).\n          // In this case, we will be in \"stable\" by the time the offer is processed\n          // so it is safe to chain it on our Operations Chain now.\n          const readyForOffer = !makingOffer\n                        && (pc.signalingState === 'stable' || isSettingRemoteAnswerPending);\n          const offerCollision = description.type === 'offer' && !readyForOffer;\n\n          ignoreOffer = !polite && offerCollision;\n          if (ignoreOffer) {\n            return;\n          }\n          isSettingRemoteAnswerPending = description.type === 'answer';\n          await pc.setRemoteDescription(description); // SRD rolls back as needed\n          isSettingRemoteAnswerPending = false;\n          if (description.type === 'offer') {\n            await pc.setLocalDescription();\n            signaling.send({ description: pc.localDescription });\n          }\n        } else if (candidate) {\n          try {\n            await pc.addIceCandidate(candidate);\n          } catch (err) {\n            if (!ignoreOffer) {\n              throw err;\n            } // Suppress ignored offer's candidates\n          }\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const onSendChannelStateChange = (e) => {\n      const { readyState } = e.target;\n      console.log('Send channel state is: %s', readyState);\n    };\n\n    /* TODO remove as far as we do not accept any messages */\n    pc.addEventListener('datachannel', ({ channel }) => {\n      channel.addEventListener('message', (event) => {\n        console.log('Received Message: %s', event.data);\n      });\n      channel.addEventListener('open', onSendChannelStateChange);\n      channel.addEventListener('close', onSendChannelStateChange);\n    });\n  }, []);\n\n  const onClick = () => {\n    dataChannelFileSenderRef.current.click();\n  };\n\n  const onChange = (e) => {\n    const [file] = e.target.files;\n    const { name, size } = file;\n    setMaxProgress(size);\n\n    /*\n          Label may not be longer than 65,535 bytes.\n          https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel#parameters:~:text=channel.%20This%20string-,may%20not%20be%20longer%20than%2065%2C535%20bytes.\n          Filename sizes may not exceed 255 bytes.\n          https://www.ibm.com/support/knowledgecenter/SSEQVQ_8.1.10/client/c_cmd_filespecsyntax.html\n      */\n    const dataConstraint = null;\n    /* TODO improve file transfering https://github.com/webrtc/samples/blob/gh-pages/src/content/datachannel/filetransfer/js/main.js */\n    const sendFileChannel = pcRef.current.createDataChannel(name, dataConstraint);\n    sendFileChannel.binaryType = FILE_DATA_CHANNEL_BINARY_TYPE;\n\n    /*\n    Firefox cannot send a message larger than 16 Kbytes to Chrome\n    https://viblast.com/blog/2015/2/5/webrtc-data-channel-message-size/#blog-body:~:text=Firefox%20cannot%20send%20a%20message%20larger%20than%2016%20Kbytes%20to%20Chrome\n    Messages smaller than 16kiB can be sent without concern,\n    as all major user agents handle them the same way.\n    Beyond that, things get more complicated.\n    https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_data_channels#understanding_message_size_limits\n    */\n\n    const CHUNK_SIZE = 2 ** 14;\n\n    const fileReader = new FileReader();\n    let offset = 0;\n\n    fileReader.addEventListener('error', (error) => {\n      console.error('Error reading file: ', error);\n    });\n\n    fileReader.addEventListener('abort', (event) => {\n      console.log('File reading aborted: ', event);\n    });\n\n    const readSlice = (byteOffset) => {\n      console.log('readSlice', byteOffset);\n      const slice = file.slice(offset, byteOffset + CHUNK_SIZE);\n      fileReader.readAsArrayBuffer(slice);\n    };\n\n    fileReader.addEventListener('load', (e) => {\n      console.log('FileReader.onload', e);\n      sendFileChannel.send(e.target.result);\n\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        sendFileChannel.send(END_OF_FILE_MESSAGE);\n      }\n    });\n\n    fileReader.addEventListener('progress', (e) => {\n      offset += e.loaded;\n      setProgressValue(offset);\n    });\n\n    fileReader.addEventListener('loadend', (e) => {\n      console.log('loadend', e);\n    });\n\n    sendFileChannel.onopen = () => {\n      const FIRST_BYTE_SLICE_NUMBER = 0;\n      readSlice(FIRST_BYTE_SLICE_NUMBER);\n    };\n  };\n\n  return (\n    <div className=\"player__container\">\n      <hr />\n      <section>\n        <h3>Data channel file sender</h3>\n        <input type=\"file\" ref={dataChannelFileSenderRef} style={{ display: 'none' }} onChange={onChange} />\n        <br />\n        <button type=\"button\" onClick={onClick}>Отправить файл</button>\n        {progressValue > EMPTY_PROGRESS && <progress max={maxProgress} value={progressValue} />}\n        <hr />\n      </section>\n      <h4>Удалённое видео</h4>\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <video ref={remoteVideoRef} autoPlay playsInline />\n    </div>\n  );\n};\n\nexport default RTCPlayer;\n","export const generateQueryParam = (\n  queryParamKey, queryParamValue,\n) => new URLSearchParams({ [queryParamKey]: queryParamValue }).toString();\n","import React, { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport 'features/led/LedIndicator.css';\nimport { setLed } from 'features/led/ledSlice';\nimport { AppStore } from 'app/store';\nimport { Button } from '@material-ui/core';\n\nconst LedIndicator: React.FC = () => {\n  const led = useSelector((state: AppStore) => state.led, shallowEqual);\n  const dispatch = useDispatch();\n  const ws = useRef<WebSocket>(null);\n\n  useEffect(() => {\n    (ws.current as WebSocket) = new WebSocket('ws://localhost:8080/ws');\n\n    ws.current!.onopen = () => {\n      console.log('WS connected');\n      ws.current!.send('Ping from client');\n    };\n\n    ws.current!.onclose = (event: CloseEvent) => {\n      console.log('WS closed connection', event);\n    };\n\n    ws.current!.onerror = (error) => {\n      console.log('WS error', error);\n    };\n\n    ws.current!.onmessage = (event: MessageEvent) => {\n      console.log('WS message', event.data);\n      dispatch(setLed(JSON.parse(event.data)));\n    };\n\n    return () => {\n      ws.current!.close();\n    };\n  }, []);\n\n  const renderLed = ([name, isOn]: [string, boolean], idx: number) => (\n    <div key={name} className=\"led__item\">\n      <span>{idx + 1}</span>\n      <span className={classNames('led', { led__off: !isOn, led__on: isOn })} />\n    </div>\n  );\n\n  const onClickOn = () => {\n    ws.current!.send('ON');\n  };\n\n  const onClickOff = () => {\n    ws.current!.send('OFF');\n  };\n\n  const renderButtonOn = () => <Button variant=\"contained\" onClick={onClickOn} color=\"primary\">Включить</Button>;\n  const renderButtonOff = () => <Button variant=\"contained\" onClick={onClickOff} color=\"secondary\">Выключить</Button>;\n\n  return (\n    <div className=\"board\">\n      <div className=\"led__container\">\n        {Object.entries(led).map(renderLed)}\n      </div>\n      {renderButtonOn()}\n      {renderButtonOff()}\n    </div>\n  );\n};\n\nexport default LedIndicator;\n","import React from 'react';\nimport Auth from 'features/auth/Auth';\nimport FileUploader from 'components/FileUploader';\nimport RTCPlayer from 'features/rtc/RTCPlayer';\nimport LedIndicator from 'features/led/LedIndicator';\nimport { useSelector } from 'react-redux';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,no-unused-vars\nimport adapter from 'webrtc-adapter';\n\nconst App = () => {\n  const name = useSelector((state: any) => state.auth.name);\n  const isAuthenticated = !!name;\n\n  return (\n    <>\n      <Auth />\n      {isAuthenticated && (\n      <>\n        <RTCPlayer />\n        <FileUploader />\n        <LedIndicator />\n      </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport auth from 'features/auth/authSlice';\nimport led from 'features/led/ledSlice';\n\nconst rootReducer = combineReducers({\n  auth,\n  led,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\nimport { Led } from 'features/led/ledSlice';\nimport { AuthState } from 'features/auth/authSlice';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\nexport type AppStore = { led: Led, auth: AuthState };\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './app/store';\nimport './index.css';\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n}\n\nrender();\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./app/App', render);\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type AuthState = {\n    googleId: string,\n    imageUrl: string,\n    email: string,\n    name: string,\n    givenName: string,\n    familyName: string,\n}\n\nconst initialState = {};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    getProfile(state, action: PayloadAction<AuthState>) {\n      return action.payload;\n    },\n    clearProfile() {\n      return initialState;\n    },\n  },\n});\n\nexport const { getProfile, clearProfile } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type Led = {\n  pin1: boolean,\n  pin2: boolean,\n  pin3: boolean,\n}\n\nconst initialState: Led = {\n  pin1: false,\n  pin2: false,\n  pin3: false,\n};\n\nconst ledSlice = createSlice({\n  name: 'led',\n  initialState,\n  reducers: {\n    setLed(state, action: PayloadAction<Led>) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setLed } = ledSlice.actions;\n\nexport default ledSlice.reducer;\n"],"sourceRoot":""}