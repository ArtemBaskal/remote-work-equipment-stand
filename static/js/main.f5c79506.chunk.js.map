{"version":3,"sources":["features/auth/Auth.tsx","components/FileUploader.tsx","app/App.tsx","features/auth/authSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["useStyles","makeStyles","root","flexGrow","Auth","dispatch","useDispatch","useSelector","state","auth","shallowEqual","imageUrl","email","name","classes","isAuthenticated","Toolbar","className","List","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","ListItemSecondaryAction","clientId","API_KEYS","GOOGLE_AUTH","buttonText","onLogoutSuccess","clearProfile","onSuccess","response","getProfile","profileObj","onFailure","e","console","error","cookiePolicy","isSignedIn","theme","maxWidth","margin","spacing","FileUploader","useState","file","setFile","open","setOpen","useEffect","dropbox","window","dragenter","stopPropagation","preventDefault","dragover","drop","files","dataTransfer","addEventListener","removeEventListener","resetFileSelect","ref","current","value","defaultValue","sendFile","a","formData","FormData","append","axios","method","url","data","headers","useRef","encType","type","id","accept","style","display","onChange","target","lastModifiedDate","toLocaleString","title","size","IconButton","edge","aria-label","onClick","Button","component","htmlFor","variant","color","Snackbar","autoHideDuration","onClose","Alert","severity","App","ws","WebSocket","onopen","log","send","onclose","event","onerror","initialState","authSlice","createSlice","reducers","action","payload","actions","rootReducer","combineReducers","store","configureStore","reducer","require","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5c79506.chunk.js","sourcesContent":["import React from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { getProfile, clearProfile } from 'features/auth/authSlice';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Toolbar,\n} from '@material-ui/core';\nimport API_KEYS from 'API_KEYS.json';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const {\n    imageUrl,\n    email,\n    name,\n  } = useSelector((state: any) => state.auth, shallowEqual);\n  const classes = useStyles();\n\n  const isAuthenticated = !!name;\n\n  const onSuccess = (response: any) => {\n    dispatch(getProfile(response.profileObj));\n  };\n\n  const onFailure = (e: any) => {\n    console.error(e);\n  };\n\n  const onLogoutSuccess = () => {\n    dispatch(clearProfile());\n  };\n\n  return (\n    <Toolbar>\n      <div className={classes.root}>\n        <List>\n          <ListItem>\n            {name && (\n            <ListItemAvatar>\n              <Avatar>\n                <Avatar alt={name} src={imageUrl} />\n              </Avatar>\n            </ListItemAvatar>\n            )}\n            <ListItemText\n              primary={name}\n              secondary={email}\n            />\n            <ListItemSecondaryAction>\n              {isAuthenticated ? (\n                <GoogleLogout\n                  clientId={API_KEYS.GOOGLE_AUTH}\n                  buttonText=\"Выйти\"\n                  onLogoutSuccess={onLogoutSuccess}\n                />\n              ) : (\n                <GoogleLogin\n                  clientId={API_KEYS.GOOGLE_AUTH}\n                  buttonText=\"Войти\"\n                  onSuccess={onSuccess}\n                  onFailure={onFailure}\n                  cookiePolicy=\"single_host_origin\"\n                  isSignedIn\n                />\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </div>\n    </Toolbar>\n  );\n};\n\nexport default Auth;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Button, Snackbar, ListItemText, Avatar,\n  List, ListItem, ListItemAvatar, ListItemSecondaryAction, IconButton,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert } from '@material-ui/lab';\nimport FolderIcon from '@material-ui/icons/AddToPhotos';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: '20rem',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst FileUploader = () => {\n  const classes = useStyles();\n  const [file, setFile] = useState();\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    /* TODO - add drop it text on fullscreen */\n    const dropbox = window;\n\n    dropbox.addEventListener('dragenter', dragenter, false);\n    dropbox.addEventListener('dragover', dragover, false);\n    dropbox.addEventListener('drop', drop, false);\n\n    function dragenter(e: any) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    function dragover(e: any) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    function drop(e: any) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      const dt = e.dataTransfer;\n      const { files } = dt;\n\n      setFile(files[0]);\n    }\n\n    return () => {\n      dropbox.removeEventListener('dragenter', dragenter, false);\n      dropbox.removeEventListener('dragover', dragover, false);\n      dropbox.removeEventListener('drop', drop, false);\n    };\n  }, []);\n\n  const handleFileSelect = (e: any) => {\n    setFile(e.target.files[0]);\n  };\n\n  const resetFileSelect = () => {\n    setFile(null);\n\n    if (ref.current) {\n      ref.current.value = ref.current.defaultValue;\n    }\n  };\n\n  const sendFile = async (e: any) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    await axios({\n      method: 'post',\n      url: 'http://localhost:8080/upload-image',\n      data: formData,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n\n    setOpen(true);\n\n    resetFileSelect();\n  };\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className={classes.root}>\n      <form method=\"post\" encType=\"multipart/form-data\">\n        <input\n          ref={ref}\n          type=\"file\"\n          id=\"files\"\n          accept=\".jpg\"\n          style={{ display: 'none' }}\n          onChange={handleFileSelect}\n        />\n        {file && (\n          <List>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={file.name} secondary={file.lastModifiedDate.toLocaleString()} title={`${file.size} байт`} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={resetFileSelect}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        )}\n        <Button\n          component=\"label\"\n          htmlFor=\"files\"\n          variant=\"contained\"\n          size=\"small\"\n        >\n          Загрузить\n        </Button>\n        {file && (\n          <>\n            <Button\n              component=\"button\"\n              color=\"primary\"\n              onClick={sendFile}\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"small\"\n            >\n              Отправить\n            </Button>\n          </>\n        )}\n        <Snackbar open={open} autoHideDuration={6000} onClose={() => setOpen(false)}>\n          <Alert severity=\"success\">\n            Файл успешно отправлен\n          </Alert>\n        </Snackbar>\n      </form>\n    </div>\n  );\n};\n\nexport default FileUploader;\n","import React, { useEffect } from 'react';\nimport Auth from 'features/auth/Auth';\nimport FileUploader from 'components/FileUploader';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n  const name = useSelector((state: any) => state.auth.name);\n  const isAuthenticated = !!name;\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080/ws');\n\n    ws.onopen = () => {\n      console.log('WS connected');\n      ws.send('Ping from client');\n    };\n\n    ws.onclose = (event: CloseEvent) => {\n      console.log('WS closed connection', event);\n    };\n\n    ws.onerror = (error) => {\n      console.log('WS error', error);\n    };\n  }, []);\n\n  return (\n    <>\n      <Auth />\n      {isAuthenticated && <FileUploader />}\n    </>\n  );\n};\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState: any = {};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    getProfile(state, action: PayloadAction<any>) {\n      return action.payload;\n    },\n    clearProfile() {\n      return initialState;\n    },\n  },\n});\n\nexport const { getProfile, clearProfile } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport auth from 'features/auth/authSlice';\n\nconst rootReducer = combineReducers({\n  auth,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './app/store';\nimport './index.css';\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('./app/App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n}\n\nrender();\n\n// @ts-ignore\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // @ts-ignore\n  module.hot.accept('./app/App', render);\n}\n"],"sourceRoot":""}